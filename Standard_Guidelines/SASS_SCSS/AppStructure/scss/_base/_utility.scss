// Mixin helper to output vendor-prefixed CSS
// @param {String} $property - Unprefixed CSS property
// @param {*} $value - Raw CSS value
// @param {List} $prefixes [()] - List of prefixes to output
@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    -#{$prefix}-#{$property}: $value;
  }

  #{$property}: $value;
}

// Given the location of a webfont, will generate a font-face declaration with multiple file formats.
// @param {String} $font-name - Font family name
// @param {String} $file-name - File name (no extension)
// @param {String | Number} $weight [normal] - Font weight
// @param {String} $style [normal] - Font style
// @example scss - Usage
//   @include font-face('gotham', '/fonts/gotham');
@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + '.eot');
    src: url($file-name + '.eot?#iefix')  format('embedded-opentype'),
         url($file-name + '.woff') format('woff'),
         url($file-name + '.ttf')  format('truetype'),
         url($file-name + '.svg##{$font-name}')  format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}

// Separated border-radius helpers
// @param {Length} $top-left-radius - Top left radius
// @param {Length} $top-right-radius - Top right radius
// @param {Length} $bottom-right-radius - Bottom right radius
// @param {Length} $bottom-left-radius - Bottom left radius
// @example scss - Usage
//   .foo {
//     @include border-radius-separate(1px, 2px, 3px, 4px);
//   }
// @example css - Result
//   .foo {
//     -webkit-border-top-left-radius: 1px;
//     -moz-border-top-left-radius: 1px;
//     border-top-left-radius: 1px;
//     -webkit-border-top-right-radius: 2px;
//     -moz-border-top-right-radius: 2px;
//     border-top-right-radius: 2px;
//     -webkit-border-bottom-right-radius: 3px;
//     -moz-border-bottom-right-radius: 3px;
//     border-bottom-right-radius: 3px;
//     -webkit-border-bottom-left-radius: 4px;
//     -moz-border-bottom-left-radius: 4px;
//     border-bottom-left-radius: 4px;
//   }
@mixin border-radius-separate($top-left-radius, $top-right-radius, $bottom-right-radius, $bottom-left-radius) {
    @include prefix(border-top-left-radius, $top-left-radius, 'webkit' 'moz');
    @include prefix(border-top-right-radius, $top-right-radius, 'webkit' 'moz');
    @include prefix(border-bottom-right-radius, $bottom-right-radius, 'webkit' 'moz');
    @include prefix(border-bottom-left-radius, $bottom-left-radius, 'webkit' 'moz');
}

// Text Truncate
// @example scss - Usage
// .text-truncate-1 {
//  @include truncateText(null);
// }
@mixin truncateText($overflow: ellipsis){
  overflow: hidden;
  white-space: nowrap;
  text-overflow: $overflow; // values are: clip, ellipsis, or a string
}

// Currency Symbol
// @example scss - Usage
// <body class="USD">    
//    <span class="price">45</span>
// </body>
// .price {
//    @extend %currency;
// }
%currency {
  position: relative;
  &:before {
    content: '$';
    position: relative;
    left: 0;
  }
}
.USD %currency:before { content: '$'; }
.EUR %currency:before { content: '\20AC'; } // must escape the html entities for each currency symbol
.ILS %currency:before { content: '\20AA'; }
.GBP %currency:before { content: '\00A3'; }



// Clearfix extend
// @example scss - Usage
//   .foo {
//     @extend %clearfix;
//   }
%clearfix {
    *zoom: 1;

    &:before, &:after {
        content: ' ';
        display: table;
    }

    &:after {
        clear: both;
    }
}

// Sizes in 100 for all controls
.size-100{
	width: 100px;
}
.size-200{
	width: 200px;
}
.size-300{
	width: 300px;
}
.size-400{
	width: 400px;
}
.size-500{
	width: 500px;
}