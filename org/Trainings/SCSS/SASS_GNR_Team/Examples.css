/*Variables
   <p> Hellow World </p>
   http://sassmeister.com/
*/

/*=========================================
=========================================
=========================================*/
/*Scope*/
$primaryColor:yellow;

body {
  $primaryColor: #ccc;
  background: $primaryColor;
}

p {
  color: $primaryColor;
}

/*When compiled, our paragraph selector's color is #eeccff*/


/*=========================================
=========================================
=========================================*/
/*Global flag*/
$primaryColor: yellow;

body {
  $primaryColor: #ccc !global;
  background: $primaryColor;
}

p {
  color: $primaryColor;
}
/*When compiled, our paragraph selector's color is #ccc */


/*=========================================
=========================================
=========================================*/
/*<h1> Hellow World </h1>*/
$firstValue: 62.5%;

$firstValue: 24px !default;

body {
    font-size: $firstValue;
}

/*body font size = 62.5%*/

/*=========================================
=========================================
=========================================*/
/*<nav> 
<ul><li>Hellow World</li>
<li>Hellow World</li>
<li>Hellow World</li>  
</ul>   
</nav>*/
nav {
  ul {
    margin: 0;
    padding: 0;
    list-style: none;
  }

  li { display: inline-block; }

  a {
    display: block;
    padding: 6px 12px;
    text-decoration: none;
  }
}
/*&amp; symbol So what if we want to reference the parent? This is achieved by using the &amp; symbol.*/
a.myAnchor {
    color: blue;
    &:hover {
        text-decoration: underline;
    }
    &:visited {
        color: purple;
    }
}
/*@at-root Now we know how to nest, but if we want to de-nest, we have to use the @at-root directive.*/
.first-component {
    .text { font-size: 1.4rem; }
    .button { font-size: 1.7rem; }
    .second-component {
        .text { font-size: 1.2rem; }
        .button { font-size: 1.4rem; }
    }
}
/*=========================================
=========================================
=========================================*/
/*Mixins  <div class="box">Hello</div>*/
@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}
.box { border: 5px solid red; height:100px;width:100px;}
.box { @include border-radius(20px); }


@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
 
  // Output standard non-prefixed declaration
  #{$property}: $value;
}

<div class="selector">Hellow</div>
.selector {
  //@include prefix(transform, rotate(45deg), webkit ms);
  height: 100px;
  width: 200px;
  background: yellow;
  border: 2px solid red;
  margin-top: 100px;
  margin-left: 50px;
}

http://sassmeister.com/gist/3895c2cc0904a3ce4e0e


/*=========================================
=========================================
=========================================*/
/*Extends & Placeholders*/
http://sassmeister.com/gist/53882d3cac1fe93d0221
http://sassmeister.com/gist/6a56409f2524862f1f6e


/*=========================================
=========================================
=========================================*/
/*Inheritance <div class="message">Hello</div>
<div class="success">Hello</div>
<div class="error">Hello</div>
<div class="warning">Hello</div>*/
.message {
  border: 1px solid #ccc;
  padding: 10px;
  color: #333;
}

.success {
  @extend .message;
  border-color: green;
}

.error {
  @extend .message;
  border-color: red;
}

.warning {
  @extend .message;
  border-color: yellow;
}
/*=========================================
=========================================
=========================================*/
/*Operators <div class="container">Container
<div class="article" role="main">Article</div>
<div class="aside" role="complimentary">
Aside
</div>
</div>*/

.container { width: 100%;padding:10px;border:1px solid green; }

div[role="main"] {
  float: left;
  width: 600px / 960px * 100%;
  border:1px solid red;
}
div[role="complimentary"] { 
  float: right;
  width: 300px / 960px * 100%; 
  border:1px solid blue;
}